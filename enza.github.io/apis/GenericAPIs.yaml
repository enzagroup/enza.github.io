openapi: "3.0.1"
info:
  title: "Enza REST API Documentation"
  description: |
    **ENZA APIs**
  version: "2025-02-16T14:26:47Z"

servers:
  # - url: "uat-api.enza.cloud/TX/v1"
  - url: "https://uat-api.enza.cloud/TX/v1" 
  

tags:
  - name: "Customers"
    description: "Operations related to customer information."
  - name: "Accounts"
    description: "Operations related to financial accounts and contracts."
  - name: "Cards"
    description: "Operations related to card management."

paths:
  /customers/by-rid/{rid}:
    post:
      summary: Update Customer Info
      description: Update customer details based on their unique RID (Record Identifier).
      operationId: updateCustomerInfo
      tags:
        - Customers
      parameters:
        - name: rid
          in: path
          required: true
          description: The unique RID of the customer to update.
          schema:
            type: string
      requestBody:
        description: The customer data to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                initiator_rid:
                  type: string
                  example: "GTBR"
                processor_inst_name:
                  type: string
                  example: "GTBR"
                life_phase:
                  type: string
                  example: "Single"
                kind:
                  type: string
                  example: "ModifySubject"
                subject:
                  type: object
                  properties:
                    person:
                      type: object
                      properties:
                        rid:
                          type: string
                          example: "EXTID"
                        residence_country_id:
                          type: integer
                          example: 840
      responses:
        '200':
          description: Successfully updated the customer info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        '400':
          description: Bad request, invalid data format or missing parameters.
        '404':
          description: Customer with the given RID not found.
    get:
      summary: Get Customer Info
      description: Retrieve customer details based on their unique RID.
      operationId: getCustomerInfo
      tags:
        - Customers
      parameters:
        - name: rid
          in: path
          required: true
          description: The unique RID of the customer to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved customer information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rid:
                    type: string
                    example: "000011"
                  residence_country_id:
                    type: integer
                    example: 840
                  life_phase:
                    type: string
                    example: "Single"
                  processor_inst_name:
                    type: string
                    example: "GTBR"
        '404':
          description: Customer with the given RID not found.
        '400':
          description: Bad request, invalid data format or missing parameters.
  /accounts:
    post:
      summary: Create a New Account (Financial Contract)
      description: Creates a new account and a financial contract associated with it.
      operationId: createAccount
      tags:
        - Accounts
      requestBody:
        description: The details of the financial contract to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                initiator_rid:
                  type: string
                  example: "GTBR"
                life_phase:
                  type: string
                  example: "Single"
                kind:
                  type: string
                  example: "ModifyContract"
                processor_inst_name:
                  type: string
                  example: "GTBR"
                contract:
                  type: object
                  properties:
                    rid:
                      type: string
                      example: "0000112"
                    type_rid:
                      type: string
                      example: "DebitAccTypeGTBR[RWF]"
                    branch_name:
                      type: string
                      example: "GTBR_Branch"
                    client_rid:
                      type: string
                      example: "000011"
                    main_ccy:
                      type: integer
                      example: 646
      responses:
        '201':
          description: Successfully created the account and financial contract.
        '400':
          description: Bad request, invalid data format or missing parameters.
        '404':
          description: Contract not found.

  /accounts/link-contracts:
    post:
      summary: Link Financial Contract to Issuing Contract
      description: Links an existing financial contract to an issuing contract.
      operationId: linkContracts
      tags:
        - Accounts
      requestBody:
        description: The details for linking the financial contract to an issuing contract.
        content:
          application/json:
            schema:
              type: object
              properties:
                initiator_rid:
                  type: string
                  example: "GTBR"
                processor_inst_name:
                  type: string
                  example: "Contract"
                life_phase:
                  type: string
                  example: "Single"
                kind:
                  type: string
                  example: "ModifyContract"
                contract:
                  type: object
                  properties:
                    rid:
                      type: string
                      example: "0000111"
                    out_links:
                      type: array
                      items:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: "Access"
                          contract2_rid:
                            type: string
                            example: "0000112"
                          status:
                            type: string
                            example: "A"
      responses:
        '200':
          description: Successfully linked the contracts.
        '400':
          description: Bad request, invalid data format or missing parameters.

  /accounts/by-rid/{rid}:
    get:
      summary: Get Account Info
      description: Retrieve account details based on the accountâ€™s unique RID.
      operationId: getAccountInfo
      tags:
        - Accounts
      parameters:
        - name: rid
          in: path
          required: true
          description: The unique RID of the account to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved account information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rid:
                    type: string
                    example: "0000112"
                  type_rid:
                    type: string
                    example: "DebitAccTypeGTBR[RWF]"
                  branch_name:
                    type: string
                    example: "GTBR_Branch"
                  client_rid:
                    type: string
                    example: "000011"
                  main_ccy:
                    type: integer
                    example: 646
        '404':
          description: Account with the given RID not found.
        '400':
          description: Bad request, invalid data format or missing parameters.

  /accounts/issuing:
   post:
    summary: Create New Issuing Contract
    description: Creates a new issuing contract associated with an account.
    operationId: createIssuingContract
    tags:
      - Accounts
    requestBody:
      description: The details of the issuing contract to create.
      content:
        application/json:
          schema:
            type: object
            properties:
              initiator_rid:
                type: string
                example: "GTBR"
              life_phase:
                type: string
                example: "Single"
              kind:
                type: string
                example: "ModifyContract"
              processor_inst_name:
                type: string
                example: "GTBR"
              contract:
                type: object
                properties:
                  rid:
                    type: string
                    example: "0000112"
                  type_rid:
                    type: string
                    example: "0001"
                  branch_name:
                    type: string
                    example: "Main Branch"
                  client_id:
                    type: string
                    example: "-1"
                  main_ccy:
                    type: integer
                    example: 646
                  out_links:
                    type: array
                    items:
                      type: object
                      properties:
                        kind:
                          type: string
                          example: "Access"
                        contract2_rid:
                          type: string
                          example: "-2"
                        status:
                          type: string
                          example: "A"
    responses:
      '201':
        description: Successfully created the issuing contract.
        headers:
          Location:
            description: URI of the created issuing contract.
            schema:
              type: string
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Issuing contract created successfully."
                contract_id:
                  type: string
                  example: "123456"
      '400':
        description: Bad request, invalid data format or missing parameters.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid request parameters."
                details:
                  type: array
                  items:
                    type: string
                  example: ["initiator_rid is required", "contract.type_rid must be a string"]


  /cards/by-rid/{rid}:
    get:
      summary: Get Card Info
      description: Retrieve detailed information of a card by its RID (External ID).
      tags:
        - Cards
      parameters:
        - name: rid
          in: path
          required: true
          description: The unique identifier for the card (External RID).
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved card information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties:
                      rid:
                        type: string
                        description: The card external RID.
                      status:
                        type: string
                        description: The current status of the card.
                      pan:
                        type: string
                        description: The Primary Account Number (PAN) of the card.
                      exp_time:
                        type: string
                        format: date-time
                        description: Expiration time of the card.
        '404':
          description: Card not found.

  /cards/activate:
    post:
      summary: Activate Card
      description: Activate a card by providing the PAN and expiration time.
      tags:
        - Cards
      requestBody:
        description: Details for activating a card.
        content:
          application/json:
            schema:
              type: object
              properties:
                pan:
                  type: string
                  description: The PAN of the card to be activated.
                exp_time:
                  type: string
                  format: date-time
                  description: Expiration time of the card.
                status:
                  type: string
                  enum: [Active, Inactive]
                  description: The status of the card.
      responses:
        '200':
          description: Successfully activated the card.
        '400':
          description: Invalid request parameters.
        '404':
          description: Card not found.

  /cards/ec-status:
    post:
      summary: Change EC-Status for Card
      description: Update the EC status of a card by changing its TDS enrollment status.
      tags:
        - Cards
      requestBody:
        description: Details for updating the EC-status of a card.
        content:
          application/json:
            schema:
              type: object
              properties:
                pan:
                  type: string
                  description: The PAN of the card whose EC status is being updated.
                tds_enrollment:
                  type: integer
                  description: TDS Enrollment status (e.g., 1 for enrolled, 0 for not enrolled).
      responses:
        '200':
          description: Successfully updated the EC-status for the card.
        '400':
          description: Invalid request parameters.
        '404':
          description: Card not found.

  /cards/link-card-to-person:
    post:
      summary: Link Card to Person
      description: Link a card to a specific person by associating the card with a contract.
      tags:
        - Cards
      requestBody:
        description: Details for linking a card to a person.
        content:
          application/json:
            schema:
              type: object
              properties:
                pan:
                  type: string
                  description: The PAN of the card to be linked.
                contract_rid:
                  type: string
                  description: The unique identifier of the contract to be linked with the card.
      responses:
        '200':
          description: Successfully linked the card to the person.
        '400':
          description: Invalid request parameters.
        '404':
          description: Card or contract not found.
          
components:
  schemas:
    Customer:
      required:
        - RequestType
        - AccountNum
        - BranchName
        - CardRefNum
        - EmbossedName
        - NationalId
        - Passport
        - FirstName
        - LastName
      type: object
      properties:
        RequestType: 
          type: string
          description: |
            - `1-NewAccountNewCustomer`: New customer (requires fields `FirstName`,`LastName`).
            - `2-NewAccountExistingCustomer`: Existing customer.
        BranchName:
          type: string
          enum: [GTBR]
          description: "Branch name `GTBR`"
        CardRefNum:
          type: string
          description: "Card Reference Number"
        EmbossedName:
          type: string
          description: "Name to emboss on the card"
        AccountNum: 
          type: string
          description: "Customer's account number"
        FirstName:
          type: string
          description: " `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)"
        MiddleName:
          type: string
        LastName:
          type: string
          description: " `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)"
        NationalId:
          type: string
          description : " `Mandatory` if Passport is not provided "
        Passport:
          type: string
          description : " `Mandatory` if NationalId is not provided "
        BirthDate:
          type: string
          format: date
          example: "1990-01-01"
        Email:
          type: string
          format: email
        MobilePhone:
          type: string
        StreetTitle:
          type: string
        Zip:
          type: string
  parameters:
    apiKey:
      name: x-api-key
      in: header
      required: true
      schema:
        type: string
    contentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
